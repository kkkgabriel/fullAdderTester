
*** Running xst
    with args -ifn mojo_top_0.xst -ofn mojo_top_0.srp -intstyle ise

Reading design: mojo_top_0.prj

=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Analyzing Verilog file "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/seven_seg_6.v" into library work
Parsing module <seven_seg_6>.
Analyzing Verilog file "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/decoder_7.v" into library work
Parsing module <decoder_7>.
Analyzing Verilog file "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/counter_5.v" into library work
Parsing module <counter_5>.
Analyzing Verilog file "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/reset_conditioner_1.v" into library work
Parsing module <reset_conditioner_1>.
Analyzing Verilog file "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/multi_seven_seg_2.v" into library work
Parsing module <multi_seven_seg_2>.
Analyzing Verilog file "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/debounce_3.v" into library work
Parsing module <debounce_3>.
Analyzing Verilog file "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/autoclk_4.v" into library work
Parsing module <autoclk_4>.
Analyzing Verilog file "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/mojo_top_0.v" into library work
Parsing module <mojo_top_0>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating module <mojo_top_0>.

Elaborating module <reset_conditioner_1>.

Elaborating module <multi_seven_seg_2>.

Elaborating module <counter_5>.

Elaborating module <seven_seg_6>.

Elaborating module <decoder_7>.

Elaborating module <debounce_3>.

Elaborating module <autoclk_4>.

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <mojo_top_0>.
    Related source file is "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/mojo_top_0.v".
    Found 1-bit register for signal <M_test_q>.
    Found 3-bit register for signal <M_state_q>.
    Found 3-bit subtractor for signal <M_state_q[2]_GND_1_o_sub_3_OUT> created at line 74.
    Found 3-bit adder for signal <M_state_q[2]_GND_1_o_add_6_OUT> created at line 81.
    Found 16x3-bit Read Only RAM for signal <_n0643>
    Found 8x11-bit Read Only RAM for signal <_n0757>
    Found 1-bit tristate buffer for signal <spi_miso> created at line 92
    Found 1-bit tristate buffer for signal <spi_channel<3>> created at line 92
    Found 1-bit tristate buffer for signal <spi_channel<2>> created at line 92
    Found 1-bit tristate buffer for signal <spi_channel<1>> created at line 92
    Found 1-bit tristate buffer for signal <spi_channel<0>> created at line 92
    Found 1-bit tristate buffer for signal <avr_rx> created at line 92
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <op<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <op<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <op<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <op<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <op<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <op<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <op<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <op<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <M_seg_values<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred   2 RAM(s).
	inferred   1 Adder/Subtractor(s).
	inferred   4 D-type flip-flop(s).
	inferred  21 Latch(s).
	inferred 171 Multiplexer(s).
	inferred   6 Tristate(s).
Unit <mojo_top_0> synthesized.

Synthesizing Unit <reset_conditioner_1>.
    Related source file is "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/reset_conditioner_1.v".
    Found 4-bit register for signal <M_stage_q>.
    Summary:
	inferred   4 D-type flip-flop(s).
Unit <reset_conditioner_1> synthesized.

Synthesizing Unit <multi_seven_seg_2>.
    Related source file is "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/multi_seven_seg_2.v".
    Found 4-bit adder for signal <M_ctr_value[1]_GND_3_o_add_0_OUT> created at line 48.
    Found 31-bit shifter logical right for signal <n0010> created at line 48
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred   1 Combinational logic shifter(s).
Unit <multi_seven_seg_2> synthesized.

Synthesizing Unit <counter_5>.
    Related source file is "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/counter_5.v".
    Found 18-bit register for signal <M_ctr_q>.
    Found 18-bit adder for signal <M_ctr_q[17]_GND_4_o_add_0_OUT> created at line 35.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  18 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <counter_5> synthesized.

Synthesizing Unit <seven_seg_6>.
    Related source file is "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/seven_seg_6.v".
    Found 16x7-bit Read Only RAM for signal <segs>
    Summary:
	inferred   1 RAM(s).
Unit <seven_seg_6> synthesized.

Synthesizing Unit <decoder_7>.
    Related source file is "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/decoder_7.v".
    Summary:
	no macro.
Unit <decoder_7> synthesized.

Synthesizing Unit <debounce_3>.
    Related source file is "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/debounce_3.v".
WARNING:Xst:647 - Input <io_button<4:3>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 1-bit register for signal <M_start_q>.
    Found 2-bit register for signal <M_op_to_write_q>.
    Found 26-bit register for signal <M_debounce_clk_q>.
    Found 26-bit adder for signal <M_debounce_clk_q[25]_GND_7_o_add_4_OUT> created at line 57.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  29 D-type flip-flop(s).
	inferred   4 Multiplexer(s).
Unit <debounce_3> synthesized.

Synthesizing Unit <autoclk_4>.
    Related source file is "/home/kkk/Desktop/fullAdderTester2/fullAdderTester2/work/planAhead/fullAdderTester2/fullAdderTester2.srcs/sources_1/imports/verilog/autoclk_4.v".
WARNING:Xst:647 - Input <io_dip<22:0>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 5-bit register for signal <M_slow_clk_q>.
    Found 31-bit register for signal <M_fast_clk_q>.
    Found 31-bit adder for signal <M_fast_clk_q[30]_GND_8_o_add_1_OUT> created at line 30.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  36 D-type flip-flop(s).
	inferred   3 Multiplexer(s).
Unit <autoclk_4> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 3
 16x3-bit single-port Read Only RAM                    : 1
 16x7-bit single-port Read Only RAM                    : 1
 8x11-bit single-port Read Only RAM                    : 1
# Adders/Subtractors                                   : 5
 18-bit adder                                          : 1
 26-bit adder                                          : 1
 3-bit addsub                                          : 1
 31-bit adder                                          : 1
 4-bit adder                                           : 1
# Registers                                            : 9
 1-bit register                                        : 2
 18-bit register                                       : 1
 2-bit register                                        : 1
 26-bit register                                       : 1
 3-bit register                                        : 1
 31-bit register                                       : 1
 4-bit register                                        : 1
 5-bit register                                        : 1
# Latches                                              : 21
 1-bit latch                                           : 21
# Multiplexers                                         : 179
 1-bit 2-to-1 multiplexer                              : 150
 18-bit 2-to-1 multiplexer                             : 1
 2-bit 2-to-1 multiplexer                              : 3
 26-bit 2-to-1 multiplexer                             : 1
 3-bit 2-to-1 multiplexer                              : 6
 31-bit 2-to-1 multiplexer                             : 2
 5-bit 2-to-1 multiplexer                              : 1
 8-bit 2-to-1 multiplexer                              : 15
# Logic shifters                                       : 1
 31-bit shifter logical right                          : 1
# Tristates                                            : 6
 1-bit tristate buffer                                 : 6

=========================================================================
INFO:Xst:1767 - HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================


Synthesizing (advanced) Unit <counter_5>.
The following registers are absorbed into counter <M_ctr_q>: 1 register on signal <M_ctr_q>.
Unit <counter_5> synthesized (advanced).

Synthesizing (advanced) Unit <debounce_3>.
The following registers are absorbed into counter <M_debounce_clk_q>: 1 register on signal <M_debounce_clk_q>.
Unit <debounce_3> synthesized (advanced).

Synthesizing (advanced) Unit <mojo_top_0>.
INFO:Xst:3212 - HDL ADVISOR - Asynchronous or synchronous initialization of the register <M_state_q> prevents it from being combined with the RAM <Mram__n0757> for implementation as read-only block RAM.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 8-word x 11-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <M_state_q>     |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3231 - The small RAM <Mram__n0643> will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 3-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <M_autoclk_out<3:0>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
Unit <mojo_top_0> synthesized (advanced).

Synthesizing (advanced) Unit <seven_seg_6>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_segs> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 7-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <char>          |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <segs>          |          |
    -----------------------------------------------------------------------
Unit <seven_seg_6> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 3
 16x3-bit single-port distributed Read Only RAM        : 1
 16x7-bit single-port distributed Read Only RAM        : 1
 8x11-bit single-port distributed Read Only RAM        : 1
# Adders/Subtractors                                   : 3
 3-bit addsub                                          : 1
 31-bit adder                                          : 1
 4-bit adder                                           : 1
# Counters                                             : 2
 18-bit up counter                                     : 1
 26-bit up counter                                     : 1
# Registers                                            : 47
 Flip-Flops                                            : 47
# Multiplexers                                         : 174
 1-bit 2-to-1 multiplexer                              : 147
 2-bit 2-to-1 multiplexer                              : 3
 3-bit 2-to-1 multiplexer                              : 6
 31-bit 2-to-1 multiplexer                             : 2
 5-bit 2-to-1 multiplexer                              : 1
 8-bit 2-to-1 multiplexer                              : 15
# Logic shifters                                       : 1
 31-bit shifter logical right                          : 1

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
WARNING:Xst:1710 - FF/Latch <M_seg_values_11> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
INFO:Xst:2261 - The FF/Latch <M_seg_values_13> in Unit <mojo_top_0> is equivalent to the following 2 FFs/Latches, which will be removed : <M_seg_values_10> <M_seg_values_6> 
INFO:Xst:2261 - The FF/Latch <M_seg_values_14> in Unit <mojo_top_0> is equivalent to the following 2 FFs/Latches, which will be removed : <M_seg_values_5> <M_seg_values_3> 

Optimizing unit <mojo_top_0> ...
WARNING:Xst:1710 - FF/Latch <op_3> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <op_4> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <op_2> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <op_3> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <op_4> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <op_2> (without init value) has a constant value of 0 in block <mojo_top_0>. This FF/Latch will be trimmed during the optimization process.

Optimizing unit <debounce_3> ...

Optimizing unit <autoclk_4> ...

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 0) on block mojo_top_0, actual ratio is 5.
FlipFlop autoclk/M_fast_clk_q_21 has been replicated 1 time(s)

Final Macro Processing ...

Processing Unit <mojo_top_0> :
INFO:Xst:741 - HDL ADVISOR - A 4-bit shift register was found for signal <reset_cond/M_stage_q_3> and currently occupies 4 logic cells (2 slices). Removing the set/reset logic would take advantage of SRL32 (and derived) primitives and reduce this to 1 logic cells (1 slices). Evaluate if the set/reset can be removed for this simple shift register. The majority of simple pipeline structures do not need to be set/reset operationally.
Unit <mojo_top_0> processed.

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 92
 Flip-Flops                                            : 92

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Clock Information:
------------------
---------------------------------------------------------------------------------+-------------------------+-------+
Clock Signal                                                                     | Clock buffer(FF name)   | Load  |
---------------------------------------------------------------------------------+-------------------------+-------+
clk                                                                              | BUFGP                   | 92    |
auto_M_autoclk_out[4]_OR_144_o(auto_M_autoclk_out[4]_OR_144_o1:O)                | NONE(*)(M_seg_values_13)| 8     |
M_test_q_M_autoclk_out[4]_MUX_560_o(Mmux_M_test_q_M_autoclk_out[4]_MUX_560_o11:O)| NONE(*)(op_6)           | 5     |
---------------------------------------------------------------------------------+-------------------------+-------+
(*) These 2 clock signal(s) are generated by combinatorial logic,
and XST is not able to identify which are the primary clock signals.
Please use the CLOCK_SIGNAL constraint to specify the clock signal(s) generated by combinatorial logic.
INFO:Xst:2169 - HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -2

   Minimum period: 7.490ns (Maximum Frequency: 133.511MHz)
   Minimum input arrival time before clock: 5.248ns
   Maximum output required time after clock: 7.275ns
   Maximum combinational path delay: 7.521ns

=========================================================================
